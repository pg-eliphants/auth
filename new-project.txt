DROP TABLE IF EXISTS profiles;
CREATE TABLE profiles (
  id uuid not null default gen_random_uuid(),
  first_name text,
  last_name text,
  created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc'),
  CONSTRAINT profiles_pkey PRIMARY KEY (id)
);
INSERT INTO profiles (id, first_name, last_name)  
    VALUES
 ('2c37b5df15a545b8a472856e3ef2d4c7'::uuid,'James','Smith'),
 ('90b84832eade473f976f46542b104612'::uuid,'Mary','Johnson'),
 ('166506a139ee480bbd195f554a1ce9a6'::uuid,'John','Williams'),
 ('307cec47576c4bb5b731a81f0d55353e'::uuid,'Patricia','Brown'),
 ('44477e824344443a828ee8f50bf58006'::uuid,'Robert','Jones'),
 ('8450cd0dd373410ab298ff8b0cd22498'::uuid,'Jennifer','Garcia'),
 ('98e79c2dd0e24c0b93309396879d8f8a'::uuid,'Michael','Miller'),
 ('801bc6be73494687a363c00e5284afd4'::uuid,'Linda','Davis'),
 ('3b55d96826824248a66e53ab04546f85'::uuid,'William','Rodriguez'),
 ('29374be133f9424ca494fd6cc050c422'::uuid,'Elizabeth','Martinez'),
 ('87c3f25fe457471bb48403b3a347b7d5'::uuid,'David','Hernandez'),
 ('81fc15998b1748cda0d05e7906a54e5a'::uuid,'Barbara','Lopez'),
 ('2a25e00f4593416d8c5886ee9c3e1ab2'::uuid,'Richard','Wilson'),
 ('a2956ee067974063866da08d1b210bff'::uuid,'Susan','Anderson'),
 ('9b64089445514224b791d6fcea683d8b'::uuid,'Joseph','Taylor'),
 ('0620e8d1d9454b2797df86195b7c74cc'::uuid,'Jessica','Thomas'),
 ('ba87e93675514fcbb8fc7dcada92dde3'::uuid,'Thomas','Moore'),
 ('b0351d65be19425aa137ab10df3d693d'::uuid,'Sarah','Jackson'),
 ('2204989eb9944ca6bd5caccc803108c6'::uuid,'Charles','Martin'),
 ('a99ac4c4f63c4e1a87b90f7a18541223'::uuid,'Karen','Lee'),
 ('683398daa47046c6aafbde792d2b92e4'::uuid,'Emily','Smith'),
 ('c6d00aa7530b40978efc52e743e03875'::uuid,'Alexander','Johnson'),
 ('7d7aa4bda5ab48299e0a6ae7fd7af6b3'::uuid,'Olivia','Williams'),
 ('01e17d18de5e42b58a093d344cd575e0'::uuid,'Ethan','Brown'),
 ('68961808396f4c9bbeb3f855f6deac7e'::uuid,'Sophia','Jones'),
 ('ae2f989b85184058ab252b0cb6c86898'::uuid,'Noah','Garcia'),
 ('c12dbf1f5193481fb885d122338c039c'::uuid,'Madison','Miller'),
 ('6bef7d62a2fd473297ee526cdbcf986c'::uuid,'Daniel','Davis'),
 ('fa50082732624314a9aa8042103212ac'::uuid,'Ava','Rodriguez'),
 ('dcbdcbb8e3064698982e27c17a8039c7'::uuid,'Benjamin','Martinez'),
 ('d017105fe17b4268b8ea7fa597c628df'::uuid,'Chloe','Hernandez'),
 ('c2839fa8dfd04c5da34a1bced685ae88'::uuid,'Samuel','Lopez'),
 ('98e84399379346debb863158e02d158e'::uuid,'Natalie','Wilson'),
 ('8c980acfe39149d387019aa39a84ef71'::uuid,'Jacob','Anderson'),
 ('147fc4fb0ed746b9a3224386a89a0e43'::uuid,'Grace','Taylor'),
 ('bb4cb87e111e44959203d3e9b97c954e'::uuid,'Lucas','Thomas'),
 ('126bd8fe6c514cd98c2cd274b4a93eb4'::uuid,'Lily','Moore'),
 ('56f06a38da994189be7b5c7555841dd8'::uuid,'Dylan','Jackson'),
 ('dbe315480ed04a788f87bae366264831'::uuid,'Olivia','Martin'),
 ('59390468cddf4f06b703cbf2628dbb92'::uuid,'Mason','Lee');



DROP TABLE IF EXISTS events;
create table events (
    id uuid not null default gen_random_uuid (),
    created_at timestamp with time zone not null default (now() AT TIME ZONE 'utc'),
    name text not null default ''::text,
    description text not null default ''::text,
    owner_id uuid not null,
    constraint events_pkey primary key (id)
  );

INSERT INTO events (id, name, owner_id)
VALUES
 ('268ccfd9-c921-469e-953b-fb2568728fe0'::uuid, 'Emerging Trends in Artificial Intelligence','123e4567e89b12d3a456426614174000'::uuid ),
 ('83b812d1-a1f1-4040-b4ff-9318abda0547'::uuid, 'Blockchain Technology: Beyond Cryptocurrencies','123e4567e89b12d3a456426614174000'::uuid ),
 ('8de45862-6b7a-4cac-8e8d-dea47b372214'::uuid, 'Cybersecurity Essentials for the Digital Age','123e4567e89b12d3a456426614174000'::uuid ),
 ('7c08845d-71d0-4e29-a62f-e068eca82987'::uuid, 'Data Science: Unlocking Insights from Big Data','123e4567e89b12d3a456426614174000'::uuid ),
 ('237115db-4fde-4c42-a8e4-d368e3621745'::uuid, 'Cloud Computing: The Future of IT Infrastructure','123e4567e89b12d3a456426614174000'::uuid ),
 ('630fec31-3578-4be6-aa43-9bb7f5e12589'::uuid, 'Machine Learning Applications in Industry','123e4567e89b12d3a456426614174000'::uuid ),
 ('aca8013b-70c3-4710-9da0-cd1d4098a148'::uuid, 'Internet of Things (IoT): Connecting the World','123e4567e89b12d3a456426614174000'::uuid ),
 ('4d856e6f-48b4-452c-82d1-efc7cd2fa406'::uuid, 'Ethical Hacking: Security Testing and Vulnerability Assessment','123e4567e89b12d3a456426614174000'::uuid ),
 ('96c9dadf-8bb1-4645-8e79-bfaa9959559e'::uuid, 'Quantum Computing: Exploring the Next Frontier','123e4567e89b12d3a456426614174000'::uuid ),
 ('47b10262-c53c-4751-adbc-b890fd3513f1'::uuid, 'Software Development Best Practices and Agile Methodologies','123e4567e89b12d3a456426614174000'::uuid ),
 ('7d5a546a-f7ba-48dc-b598-b023835df0fc'::uuid, 'Computer Vision: From Theory to Applications','123e4567e89b12d3a456426614174000'::uuid ),
 ('3e25c4d6-4c68-4c13-bfac-3d33c60ac4a8'::uuid, 'Natural Language Processing: Understanding Human Language','123e4567e89b12d3a456426614174000'::uuid ),
 ('31ff5240-18fe-4735-8eb2-519e0df2c0c1'::uuid, 'Robotics and Automation: Transforming Industries','123e4567e89b12d3a456426614174000'::uuid ),
 ('6c1ee8a2-a578-4be0-b5c6-47b0db0fb114'::uuid, 'Bioinformatics: Bridging Biology and Computer Science','123e4567e89b12d3a456426614174000'::uuid ),
 ('53271967-d06e-461b-ba64-6ac60c684b7c'::uuid, 'Digital Privacy and Personal Data Protection','123e4567e89b12d3a456426614174000'::uuid ),
 ('d36b124b-c452-418c-a1d9-2692922acad4'::uuid, 'Virtual Reality and Augmented Reality Technologies','123e4567e89b12d3a456426614174000'::uuid ),
 ('836342dc-c51a-4645-8f69-17ef69664020'::uuid, 'Deep Learning: Advances in Neural Networks','123e4567e89b12d3a456426614174000'::uuid ),
 ('03032ab0-7e5f-4d70-a86e-a2aa5fd64955'::uuid, 'Human-Computer Interaction: Designing User-Friendly Interfaces','123e4567e89b12d3a456426614174000'::uuid ),
 ('cfaa45fb-f9e0-4aed-9cf0-10da52c2ef94'::uuid, 'Mobile App Development: Trends and Technologies','123e4567e89b12d3a456426614174000'::uuid ),
 ('5f8bbe53-de40-4657-a1fb-711d5a4a73c7'::uuid, 'Game Development: From Concept to Launch','123e4567e89b12d3a456426614174000'::uuid );

DROP TABLE IF EXISTS event_locations;
CREATE TABLE IF NOT EXISTS event_locations (
  id INT8 GENERATED BY DEFAULT AS IDENTITY,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (now() AT TIME ZONE 'utc'),
  id_profile UUID NOT NULL, -- the user who created this event-location combination?
  id_event UUID NOT NULL, -- the location belongs to thi event
  name TEXT NOT NULL,  -- name of the location
  CONSTRAINT event_locations_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_fkey FOREIGN KEY (id_profile) REFERENCES profiles (id),
  CONSTRAINT eventss_fkey FOREIGN KEY (id_event) REFERENCES events (id)
);

--
-- for event 'Emerging Trends in Artificial Intelligence', we have these proposed places
--
insert into event_locations (id, id_profile, id_event, name) values
(1, '8c980acfe39149d387019aa39a84ef71'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid, 'Cipriani Wall Street'),
(2, 'a2956ee067974063866da08d1b210bff'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid, 'The Plaza Hotel'),
(3, '01e17d18de5e42b58a093d344cd575e0'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid, 'Brooklyn Expo Center'),
(4, '01e17d18de5e42b58a093d344cd575e0'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid, 'The Brooklyn Navy Yard'),

--
-- for event 'Blockchain Technology: Beyond Cryptocurrencies', we have these proposed places
-- for this event in the end it will equal votes in 2 during voting 2x (hence produce now rows for this event)
--
insert into event_locations (id, id_profile, id_event, name) values
(11, 'c12dbf1f5193481fb885d122338c039c'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid, 'The Mirage Events Center'),
(12, '68961808396f4c9bbeb3f855f6deac7e'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid, 'Westgate Las Vegas Resort & Casino'),
(13, 'd017105fe17b4268b8ea7fa597c628df'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid, 'Caesars Forum'),
(14, '87c3f25fe457471bb48403b3a347b7d5'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid, 'Wynn Las Vegas and Encore Resort');

-- bump the "event_locations_id_seq" to above 100;
ALTER SEQUENCE event_locations_id_seq RESTART WITH 100;

---
--- proposed event dates (per event)
---
DROP TABLE IF EXISTS event_times;
CREATE TABLE IF NOT EXISTS event_times (
  id INT8 GENERATED BY DEFAULT AS IDENTITY,
  created_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT now(),
  id_profile UUID NOT NULL,
  id_event UUID NOT NULL,
  start_time TIMESTAMP NOT NULL,
  end_time TIMESTAMP NOT NULL,  
  CONSTRAINT event_times_pkey PRIMARY KEY (id),
  CONSTRAINT profiles_fkey FOREIGN KEY (id_profile) REFERENCES profiles (id),
  CONSTRAINT eventss_fkey FOREIGN KEY (id_event) REFERENCES events (id)
);

-- proposed date-time for event "'Emerging Trends in Artificial Intelligence" (268ccfd9c921469e953bfb2568728fe0)
-- proposed by "Jacob, Anderson" (8c980acfe39149d387019aa39a84ef71)
-- multiple proposed dates by "Jacob, Anderson"
--
insert into event_times(id, id_profile, id_event, start_time, end_time) VALUES
(1, '8c980acfe39149d387019aa39a84ef71'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid,  '2024-08-05 09:00:00'::timestamp, '2024-08-05 17:00:00'::timestamp),
(2, '8c980acfe39149d387019aa39a84ef71'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid,  '2024-08-09 09:00:00'::timestamp, '2024-08-09 17:00:00'::timestamp),
(3, '8c980acfe39149d387019aa39a84ef71'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid,  '2024-08-14 09:00:00'::timestamp, '2024-08-14 17:00:00'::timestamp),
(4, '8c980acfe39149d387019aa39a84ef71'::uuid, '268ccfd9c921469e953bfb2568728fe0'::uuid,  '2024-08-16 09:00:00'::timestamp, '2024-08-16 17:00:00'::timestamp);


-- proposed date-time for event "Blockchain Technology: Beyond Cryptocurrencies"
-- proposed by "Madison Miller" (c12dbf1f5193481fb885d122338c039c)
-- multiple proposed dates by "Madison Miller"
--
insert into event_times(id, id_profile, id_event, start_time, end_time) VALUES
(11, '8c980acfe39149d387019aa39a84ef71'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid,  '2024-08-05 09:00:00'::timestamp, '2024-08-18 17:00:00'::timestamp),
(12, '8c980acfe39149d387019aa39a84ef71'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid,  '2024-08-09 09:00:00'::timestamp, '2024-08-19 17:00:00'::timestamp),
(13, '8c980acfe39149d387019aa39a84ef71'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid,  '2024-08-14 09:00:00'::timestamp, '2024-08-20 17:00:00'::timestamp),
(14, '8c980acfe39149d387019aa39a84ef71'::uuid, '83b812d1a1f14040b4ff9318abda0547'::uuid,  '2024-08-16 09:00:00'::timestamp, '2024-08-21 17:00:00'::timestamp);

-- bump the "event_times_id_seq" to above 100;
ALTER SEQUENCE event_times_id_seq RESTART WITH 100;

-- Now we start collecting votes over time on event_time_votes and event_location_votes
-- votes intersperced with constant time delta, but that is just to make easy vote mocking
-- event time ids voted for, 30 votes
-- random vent time votes: [13  1 11  1 13 12 12 11 12  13  1  3 14  1  1 14  3  5 12  1 11 11  1]
-- random event location votes: [13  13  1  3  1  13  13 11  3  3 11  2  1  1 13 13  14  1 13  1  4 13 13]

-- 20 profiles randomly selected (without replacement) for voting (time and location)
-- random profiles executing their time votes [6 35 26  5 28 14 37 23 34 32 40  7 27 12  4 15 10 30 20 29 24 33]
-- rannom profiles executing their location votes [37 22  8 20 29 19 32 26 11 24 16 12 35  1  4  5 13  7 28 40 14  6]

with sampled_profils as (select 
  unnest(
     ARRAY([37, 22,  8, 20, 29, 19, 32, 26, 11, 24, 16, 12, 35,  1,  4,  5, 13,  7, 28, 40, 14,  6])
  ) as rownr
),
user_profiles_ordered as (select
   select id, row_number() over() as rn from profiles;
),
select 
   upo.id,
   sp.rownr
from 
   user_profiles_ordered upo    
   -- TODO I AM HERE


insert into event_time_votes(id_time, id_profile, voted_at)
with sampled as (
  select 
    unnest(
      ARRAY[13, 1, 11, 1, 13, 12, 12, 11, 12, 
      13, 1, 3, 14, 1, 1, 14, 3, 12, 1, 11, 11, 
      1]
    ) as id
), 
ordered as (
  select 
    id, 
    row_number() over() as rn 
  from 
    sampled
), 
random_voting_times as (
  select 
    o.id, 
    o.rn, 
    to_timestamp(
      extract(
        epoch 
        from 
          '2024-11-11 12:00:00' :: timestamp
      )+ 60 *(o.rn * 10 - 4 * random()) 
    ) at time zone 'utc' as time_of_vote 
  from 
    ordered as o
) 
select 
  rvt.id, 
  rvt.rn, 
  et.id_event, 
  rvt.time_of_vote 
from 
  random_voting_times as rvt 
  left join event_times as et on (et.id = rvt.id) 
order by 
  rn;
     


   

DROP TABLE IF EXISTS event_time_votes;
CREATE TABLE event_time_votes (
  id_time INT8 NOT NULL,
  id_profile UUID NOT NULL,
  voted_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (now() AT TIME ZONE 'utc'::TEXT),
  CONSTRAINT event_time_votes_pkey PRIMARY KEY (id_profile, id_time),
  CONSTRAINT event_time_votes_id_time_fkey FOREIGN KEY (id_time) REFERENCES event_times (id),
  CONSTRAINT event_time_votes_id_profile_fkey FOREIGN KEY (id_profile) REFERENCES profiles (id)
);

CREATE TABLE event_location_votes (
  id_location INT8 NOT NULL,
  id_profile UUID NOT NULL,
  voted_at TIMESTAMP WITH TIME ZONE NOT NULL DEFAULT (now() AT TIME ZONE 'utc'::TEXT),
  CONSTRAINT event_location_votes_pkey PRIMARY KEY (id_profile, id_location),
  CONSTRAINT event_location_votes_id_location_fkey FOREIGN KEY (id_location) REFERENCES event_locations (id),
  CONSTRAINT event_location_votes_id_profile_fkey FOREIGN KEY (id_profile) REFERENCES profiles (id)
);

